/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.daos;


import com.dink3.jooq.tables.RefreshToken;
import com.dink3.jooq.tables.records.RefreshTokenRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RefreshTokenDao extends DAOImpl<RefreshTokenRecord, com.dink3.jooq.tables.pojos.RefreshToken, String> {

    /**
     * Create a new RefreshTokenDao without any configuration
     */
    public RefreshTokenDao() {
        super(RefreshToken.REFRESH_TOKEN, com.dink3.jooq.tables.pojos.RefreshToken.class);
    }

    /**
     * Create a new RefreshTokenDao with an attached configuration
     */
    public RefreshTokenDao(Configuration configuration) {
        super(RefreshToken.REFRESH_TOKEN, com.dink3.jooq.tables.pojos.RefreshToken.class, configuration);
    }

    @Override
    public String getId(com.dink3.jooq.tables.pojos.RefreshToken object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(RefreshToken.REFRESH_TOKEN.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchById(String... values) {
        return fetch(RefreshToken.REFRESH_TOKEN.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dink3.jooq.tables.pojos.RefreshToken fetchOneById(String value) {
        return fetchOne(RefreshToken.REFRESH_TOKEN.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.RefreshToken> fetchOptionalById(String value) {
        return fetchOptional(RefreshToken.REFRESH_TOKEN.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(RefreshToken.REFRESH_TOKEN.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchByUserId(String... values) {
        return fetch(RefreshToken.REFRESH_TOKEN.USER_ID, values);
    }

    /**
     * Fetch records that have <code>token BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchRangeOfToken(String lowerInclusive, String upperInclusive) {
        return fetchRange(RefreshToken.REFRESH_TOKEN.TOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>token IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchByToken(String... values) {
        return fetch(RefreshToken.REFRESH_TOKEN.TOKEN, values);
    }

    /**
     * Fetch records that have <code>expires_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchRangeOfExpiresAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(RefreshToken.REFRESH_TOKEN.EXPIRES_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expires_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchByExpiresAt(String... values) {
        return fetch(RefreshToken.REFRESH_TOKEN.EXPIRES_AT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchRangeOfCreatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(RefreshToken.REFRESH_TOKEN.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.RefreshToken> fetchByCreatedAt(String... values) {
        return fetch(RefreshToken.REFRESH_TOKEN.CREATED_AT, values);
    }
}
