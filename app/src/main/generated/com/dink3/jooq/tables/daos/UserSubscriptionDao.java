/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.daos;


import com.dink3.jooq.tables.UserSubscription;
import com.dink3.jooq.tables.records.UserSubscriptionRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserSubscriptionDao extends DAOImpl<UserSubscriptionRecord, com.dink3.jooq.tables.pojos.UserSubscription, String> {

    /**
     * Create a new UserSubscriptionDao without any configuration
     */
    public UserSubscriptionDao() {
        super(UserSubscription.USER_SUBSCRIPTION, com.dink3.jooq.tables.pojos.UserSubscription.class);
    }

    /**
     * Create a new UserSubscriptionDao with an attached configuration
     */
    public UserSubscriptionDao(Configuration configuration) {
        super(UserSubscription.USER_SUBSCRIPTION, com.dink3.jooq.tables.pojos.UserSubscription.class, configuration);
    }

    @Override
    public String getId(com.dink3.jooq.tables.pojos.UserSubscription object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserSubscription.USER_SUBSCRIPTION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchById(String... values) {
        return fetch(UserSubscription.USER_SUBSCRIPTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dink3.jooq.tables.pojos.UserSubscription fetchOneById(String value) {
        return fetchOne(UserSubscription.USER_SUBSCRIPTION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.UserSubscription> fetchOptionalById(String value) {
        return fetchOptional(UserSubscription.USER_SUBSCRIPTION.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserSubscription.USER_SUBSCRIPTION.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchByUserId(String... values) {
        return fetch(UserSubscription.USER_SUBSCRIPTION.USER_ID, values);
    }

    /**
     * Fetch records that have <code>tier BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchRangeOfTier(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserSubscription.USER_SUBSCRIPTION.TIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tier IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchByTier(String... values) {
        return fetch(UserSubscription.USER_SUBSCRIPTION.TIER, values);
    }

    /**
     * Fetch records that have <code>last_sync_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchRangeOfLastSyncAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserSubscription.USER_SUBSCRIPTION.LAST_SYNC_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_sync_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchByLastSyncAt(String... values) {
        return fetch(UserSubscription.USER_SUBSCRIPTION.LAST_SYNC_AT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchRangeOfCreatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserSubscription.USER_SUBSCRIPTION.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchByCreatedAt(String... values) {
        return fetch(UserSubscription.USER_SUBSCRIPTION.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchRangeOfUpdatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserSubscription.USER_SUBSCRIPTION.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.UserSubscription> fetchByUpdatedAt(String... values) {
        return fetch(UserSubscription.USER_SUBSCRIPTION.UPDATED_AT, values);
    }
}
