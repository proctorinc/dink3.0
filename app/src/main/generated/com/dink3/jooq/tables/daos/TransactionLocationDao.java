/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.daos;


import com.dink3.jooq.tables.TransactionLocation;
import com.dink3.jooq.tables.records.TransactionLocationRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionLocationDao extends DAOImpl<TransactionLocationRecord, com.dink3.jooq.tables.pojos.TransactionLocation, String> {

    /**
     * Create a new TransactionLocationDao without any configuration
     */
    public TransactionLocationDao() {
        super(TransactionLocation.TRANSACTION_LOCATION, com.dink3.jooq.tables.pojos.TransactionLocation.class);
    }

    /**
     * Create a new TransactionLocationDao with an attached configuration
     */
    public TransactionLocationDao(Configuration configuration) {
        super(TransactionLocation.TRANSACTION_LOCATION, com.dink3.jooq.tables.pojos.TransactionLocation.class, configuration);
    }

    @Override
    public String getId(com.dink3.jooq.tables.pojos.TransactionLocation object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchById(String... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dink3.jooq.tables.pojos.TransactionLocation fetchOneById(String value) {
        return fetchOne(TransactionLocation.TRANSACTION_LOCATION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.TransactionLocation> fetchOptionalById(String value) {
        return fetchOptional(TransactionLocation.TRANSACTION_LOCATION.ID, value);
    }

    /**
     * Fetch records that have <code>transaction_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfTransactionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.TRANSACTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByTransactionId(String... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.TRANSACTION_ID, values);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByAddress(String... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByCity(String... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.CITY, values);
    }

    /**
     * Fetch records that have <code>region BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfRegion(String lowerInclusive, String upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.REGION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>region IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByRegion(String... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.REGION, values);
    }

    /**
     * Fetch records that have <code>postal_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfPostalCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.POSTAL_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>postal_code IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByPostalCode(String... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.POSTAL_CODE, values);
    }

    /**
     * Fetch records that have <code>country BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfCountry(String lowerInclusive, String upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.COUNTRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByCountry(String... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>lat BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfLat(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.LAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lat IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByLat(Float... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.LAT, values);
    }

    /**
     * Fetch records that have <code>lon BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchRangeOfLon(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(TransactionLocation.TRANSACTION_LOCATION.LON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lon IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.TransactionLocation> fetchByLon(Float... values) {
        return fetch(TransactionLocation.TRANSACTION_LOCATION.LON, values);
    }
}
