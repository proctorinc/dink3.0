/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.records;


import com.dink3.jooq.tables.Category;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CategoryRecord extends UpdatableRecordImpl<CategoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>category.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>category.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>category.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>category.user_id</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>category.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>category.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>category.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>category.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>category.ignore</code>.
     */
    public void setIgnore(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>category.ignore</code>.
     */
    public Boolean getIgnore() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>category.hide</code>.
     */
    public void setHide(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>category.hide</code>.
     */
    public Boolean getHide() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>category.startDate</code>.
     */
    public void setStartdate(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>category.startDate</code>.
     */
    public String getStartdate() {
        return (String) get(6);
    }

    /**
     * Setter for <code>category.endDate</code>.
     */
    public void setEnddate(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>category.endDate</code>.
     */
    public String getEnddate() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoryRecord
     */
    public CategoryRecord() {
        super(Category.CATEGORY);
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(String id, String userId, String name, String description, Boolean ignore, Boolean hide, String startdate, String enddate) {
        super(Category.CATEGORY);

        setId(id);
        setUserId(userId);
        setName(name);
        setDescription(description);
        setIgnore(ignore);
        setHide(hide);
        setStartdate(startdate);
        setEnddate(enddate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CategoryRecord
     */
    public CategoryRecord(com.dink3.jooq.tables.pojos.Category value) {
        super(Category.CATEGORY);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setName(value.getName());
            setDescription(value.getDescription());
            setIgnore(value.getIgnore());
            setHide(value.getHide());
            setStartdate(value.getStartdate());
            setEnddate(value.getEnddate());
            resetChangedOnNotNull();
        }
    }
}
