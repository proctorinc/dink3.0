/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.daos;


import com.dink3.jooq.tables.Institutions;
import com.dink3.jooq.tables.records.InstitutionsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InstitutionsDao extends DAOImpl<InstitutionsRecord, com.dink3.jooq.tables.pojos.Institutions, Integer> {

    /**
     * Create a new InstitutionsDao without any configuration
     */
    public InstitutionsDao() {
        super(Institutions.INSTITUTIONS, com.dink3.jooq.tables.pojos.Institutions.class);
    }

    /**
     * Create a new InstitutionsDao with an attached configuration
     */
    public InstitutionsDao(Configuration configuration) {
        super(Institutions.INSTITUTIONS, com.dink3.jooq.tables.pojos.Institutions.class, configuration);
    }

    @Override
    public Integer getId(com.dink3.jooq.tables.pojos.Institutions object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchById(Integer... values) {
        return fetch(Institutions.INSTITUTIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dink3.jooq.tables.pojos.Institutions fetchOneById(Integer value) {
        return fetchOne(Institutions.INSTITUTIONS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.Institutions> fetchOptionalById(Integer value) {
        return fetchOptional(Institutions.INSTITUTIONS.ID, value);
    }

    /**
     * Fetch records that have <code>plaid_institution_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfPlaidInstitutionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.PLAID_INSTITUTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plaid_institution_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchByPlaidInstitutionId(String... values) {
        return fetch(Institutions.INSTITUTIONS.PLAID_INSTITUTION_ID, values);
    }

    /**
     * Fetch a unique record that has <code>plaid_institution_id = value</code>
     */
    public com.dink3.jooq.tables.pojos.Institutions fetchOneByPlaidInstitutionId(String value) {
        return fetchOne(Institutions.INSTITUTIONS.PLAID_INSTITUTION_ID, value);
    }

    /**
     * Fetch a unique record that has <code>plaid_institution_id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.Institutions> fetchOptionalByPlaidInstitutionId(String value) {
        return fetchOptional(Institutions.INSTITUTIONS.PLAID_INSTITUTION_ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchByName(String... values) {
        return fetch(Institutions.INSTITUTIONS.NAME, values);
    }

    /**
     * Fetch records that have <code>logo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfLogo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.LOGO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>logo IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchByLogo(String... values) {
        return fetch(Institutions.INSTITUTIONS.LOGO, values);
    }

    /**
     * Fetch records that have <code>primary_color BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfPrimaryColor(String lowerInclusive, String upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.PRIMARY_COLOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>primary_color IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchByPrimaryColor(String... values) {
        return fetch(Institutions.INSTITUTIONS.PRIMARY_COLOR, values);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchByUrl(String... values) {
        return fetch(Institutions.INSTITUTIONS.URL, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfCreatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchByCreatedAt(String... values) {
        return fetch(Institutions.INSTITUTIONS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchRangeOfUpdatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Institutions.INSTITUTIONS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Institutions> fetchByUpdatedAt(String... values) {
        return fetch(Institutions.INSTITUTIONS.UPDATED_AT, values);
    }
}
