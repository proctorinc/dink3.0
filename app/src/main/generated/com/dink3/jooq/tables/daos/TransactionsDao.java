/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.daos;


import com.dink3.jooq.tables.Transactions;
import com.dink3.jooq.tables.records.TransactionsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionsDao extends DAOImpl<TransactionsRecord, com.dink3.jooq.tables.pojos.Transactions, String> {

    /**
     * Create a new TransactionsDao without any configuration
     */
    public TransactionsDao() {
        super(Transactions.TRANSACTIONS, com.dink3.jooq.tables.pojos.Transactions.class);
    }

    /**
     * Create a new TransactionsDao with an attached configuration
     */
    public TransactionsDao(Configuration configuration) {
        super(Transactions.TRANSACTIONS, com.dink3.jooq.tables.pojos.Transactions.class, configuration);
    }

    @Override
    public String getId(com.dink3.jooq.tables.pojos.Transactions object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchById(String... values) {
        return fetch(Transactions.TRANSACTIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dink3.jooq.tables.pojos.Transactions fetchOneById(String value) {
        return fetchOne(Transactions.TRANSACTIONS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.Transactions> fetchOptionalById(String value) {
        return fetchOptional(Transactions.TRANSACTIONS.ID, value);
    }

    /**
     * Fetch records that have <code>plaid_transaction_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPlaidTransactionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PLAID_TRANSACTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plaid_transaction_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPlaidTransactionId(String... values) {
        return fetch(Transactions.TRANSACTIONS.PLAID_TRANSACTION_ID, values);
    }

    /**
     * Fetch records that have <code>plaid_account_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPlaidAccountId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PLAID_ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plaid_account_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPlaidAccountId(String... values) {
        return fetch(Transactions.TRANSACTIONS.PLAID_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfAmount(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByAmount(Float... values) {
        return fetch(Transactions.TRANSACTIONS.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>iso_currency_code BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfIsoCurrencyCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.ISO_CURRENCY_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>iso_currency_code IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByIsoCurrencyCode(String... values) {
        return fetch(Transactions.TRANSACTIONS.ISO_CURRENCY_CODE, values);
    }

    /**
     * Fetch records that have <code>unofficial_currency_code BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfUnofficialCurrencyCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.UNOFFICIAL_CURRENCY_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>unofficial_currency_code IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByUnofficialCurrencyCode(String... values) {
        return fetch(Transactions.TRANSACTIONS.UNOFFICIAL_CURRENCY_CODE, values);
    }

    /**
     * Fetch records that have <code>date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfDate(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByDate(String... values) {
        return fetch(Transactions.TRANSACTIONS.DATE, values);
    }

    /**
     * Fetch records that have <code>datetime BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfDatetime(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.DATETIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datetime IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByDatetime(String... values) {
        return fetch(Transactions.TRANSACTIONS.DATETIME, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByName(String... values) {
        return fetch(Transactions.TRANSACTIONS.NAME, values);
    }

    /**
     * Fetch records that have <code>merchant_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfMerchantName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.MERCHANT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>merchant_name IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByMerchantName(String... values) {
        return fetch(Transactions.TRANSACTIONS.MERCHANT_NAME, values);
    }

    /**
     * Fetch records that have <code>payment_channel BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentChannel(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_CHANNEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_channel IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentChannel(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_CHANNEL, values);
    }

    /**
     * Fetch records that have <code>pending BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPending(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PENDING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pending IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPending(Boolean... values) {
        return fetch(Transactions.TRANSACTIONS.PENDING, values);
    }

    /**
     * Fetch records that have <code>pending_transaction_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPendingTransactionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PENDING_TRANSACTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pending_transaction_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPendingTransactionId(String... values) {
        return fetch(Transactions.TRANSACTIONS.PENDING_TRANSACTION_ID, values);
    }

    /**
     * Fetch records that have <code>account_owner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfAccountOwner(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.ACCOUNT_OWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_owner IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByAccountOwner(String... values) {
        return fetch(Transactions.TRANSACTIONS.ACCOUNT_OWNER, values);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfCategoryId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByCategoryId(String... values) {
        return fetch(Transactions.TRANSACTIONS.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByCategory(String... values) {
        return fetch(Transactions.TRANSACTIONS.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>location_address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfLocationAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.LOCATION_ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_address IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByLocationAddress(String... values) {
        return fetch(Transactions.TRANSACTIONS.LOCATION_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>location_city BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfLocationCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.LOCATION_CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_city IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByLocationCity(String... values) {
        return fetch(Transactions.TRANSACTIONS.LOCATION_CITY, values);
    }

    /**
     * Fetch records that have <code>location_region BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfLocationRegion(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.LOCATION_REGION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_region IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByLocationRegion(String... values) {
        return fetch(Transactions.TRANSACTIONS.LOCATION_REGION, values);
    }

    /**
     * Fetch records that have <code>location_postal_code BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfLocationPostalCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.LOCATION_POSTAL_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_postal_code IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByLocationPostalCode(String... values) {
        return fetch(Transactions.TRANSACTIONS.LOCATION_POSTAL_CODE, values);
    }

    /**
     * Fetch records that have <code>location_country BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfLocationCountry(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.LOCATION_COUNTRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_country IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByLocationCountry(String... values) {
        return fetch(Transactions.TRANSACTIONS.LOCATION_COUNTRY, values);
    }

    /**
     * Fetch records that have <code>location_lat BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfLocationLat(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.LOCATION_LAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_lat IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByLocationLat(Float... values) {
        return fetch(Transactions.TRANSACTIONS.LOCATION_LAT, values);
    }

    /**
     * Fetch records that have <code>location_lon BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfLocationLon(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.LOCATION_LON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>location_lon IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByLocationLon(Float... values) {
        return fetch(Transactions.TRANSACTIONS.LOCATION_LON, values);
    }

    /**
     * Fetch records that have <code>payment_meta_reference_number BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaReferenceNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_REFERENCE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_reference_number IN
     * (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaReferenceNumber(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_REFERENCE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>payment_meta_payer BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaPayer(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_PAYER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_payer IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaPayer(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_PAYER, values);
    }

    /**
     * Fetch records that have <code>payment_meta_payment_method BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaPaymentMethod(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_PAYMENT_METHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_payment_method IN
     * (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaPaymentMethod(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_PAYMENT_METHOD, values);
    }

    /**
     * Fetch records that have <code>payment_meta_payment_processor BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaPaymentProcessor(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_PAYMENT_PROCESSOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_payment_processor IN
     * (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaPaymentProcessor(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_PAYMENT_PROCESSOR, values);
    }

    /**
     * Fetch records that have <code>payment_meta_ppd_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaPpdId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_PPD_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_ppd_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaPpdId(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_PPD_ID, values);
    }

    /**
     * Fetch records that have <code>payment_meta_reason BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_reason IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaReason(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_REASON, values);
    }

    /**
     * Fetch records that have <code>payment_meta_by_order_of BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaByOrderOf(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_BY_ORDER_OF, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_by_order_of IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaByOrderOf(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_BY_ORDER_OF, values);
    }

    /**
     * Fetch records that have <code>payment_meta_payee BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfPaymentMetaPayee(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.PAYMENT_META_PAYEE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_meta_payee IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByPaymentMetaPayee(String... values) {
        return fetch(Transactions.TRANSACTIONS.PAYMENT_META_PAYEE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfCreatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByCreatedAt(String... values) {
        return fetch(Transactions.TRANSACTIONS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchRangeOfUpdatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Transactions> fetchByUpdatedAt(String... values) {
        return fetch(Transactions.TRANSACTIONS.UPDATED_AT, values);
    }
}
