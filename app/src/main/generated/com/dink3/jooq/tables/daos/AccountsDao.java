/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.daos;


import com.dink3.jooq.tables.Accounts;
import com.dink3.jooq.tables.records.AccountsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AccountsDao extends DAOImpl<AccountsRecord, com.dink3.jooq.tables.pojos.Accounts, Integer> {

    /**
     * Create a new AccountsDao without any configuration
     */
    public AccountsDao() {
        super(Accounts.ACCOUNTS, com.dink3.jooq.tables.pojos.Accounts.class);
    }

    /**
     * Create a new AccountsDao with an attached configuration
     */
    public AccountsDao(Configuration configuration) {
        super(Accounts.ACCOUNTS, com.dink3.jooq.tables.pojos.Accounts.class, configuration);
    }

    @Override
    public Integer getId(com.dink3.jooq.tables.pojos.Accounts object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchById(Integer... values) {
        return fetch(Accounts.ACCOUNTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dink3.jooq.tables.pojos.Accounts fetchOneById(Integer value) {
        return fetchOne(Accounts.ACCOUNTS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.Accounts> fetchOptionalById(Integer value) {
        return fetchOptional(Accounts.ACCOUNTS.ID, value);
    }

    /**
     * Fetch records that have <code>plaid_item_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfPlaidItemId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.PLAID_ITEM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plaid_item_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByPlaidItemId(String... values) {
        return fetch(Accounts.ACCOUNTS.PLAID_ITEM_ID, values);
    }

    /**
     * Fetch records that have <code>plaid_account_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfPlaidAccountId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.PLAID_ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plaid_account_id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByPlaidAccountId(String... values) {
        return fetch(Accounts.ACCOUNTS.PLAID_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByName(String... values) {
        return fetch(Accounts.ACCOUNTS.NAME, values);
    }

    /**
     * Fetch records that have <code>mask BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfMask(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.MASK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mask IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByMask(String... values) {
        return fetch(Accounts.ACCOUNTS.MASK, values);
    }

    /**
     * Fetch records that have <code>official_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfOfficialName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.OFFICIAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>official_name IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByOfficialName(String... values) {
        return fetch(Accounts.ACCOUNTS.OFFICIAL_NAME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByType(String... values) {
        return fetch(Accounts.ACCOUNTS.TYPE, values);
    }

    /**
     * Fetch records that have <code>subtype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfSubtype(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.SUBTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subtype IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchBySubtype(String... values) {
        return fetch(Accounts.ACCOUNTS.SUBTYPE, values);
    }

    /**
     * Fetch records that have <code>current_balance BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfCurrentBalance(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.CURRENT_BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>current_balance IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByCurrentBalance(Float... values) {
        return fetch(Accounts.ACCOUNTS.CURRENT_BALANCE, values);
    }

    /**
     * Fetch records that have <code>available_balance BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfAvailableBalance(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.AVAILABLE_BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>available_balance IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByAvailableBalance(Float... values) {
        return fetch(Accounts.ACCOUNTS.AVAILABLE_BALANCE, values);
    }

    /**
     * Fetch records that have <code>iso_currency_code BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfIsoCurrencyCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.ISO_CURRENCY_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>iso_currency_code IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByIsoCurrencyCode(String... values) {
        return fetch(Accounts.ACCOUNTS.ISO_CURRENCY_CODE, values);
    }

    /**
     * Fetch records that have <code>unofficial_currency_code BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfUnofficialCurrencyCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.UNOFFICIAL_CURRENCY_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>unofficial_currency_code IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByUnofficialCurrencyCode(String... values) {
        return fetch(Accounts.ACCOUNTS.UNOFFICIAL_CURRENCY_CODE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfCreatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByCreatedAt(String... values) {
        return fetch(Accounts.ACCOUNTS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchRangeOfUpdatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Accounts.ACCOUNTS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Accounts> fetchByUpdatedAt(String... values) {
        return fetch(Accounts.ACCOUNTS.UPDATED_AT, values);
    }
}
