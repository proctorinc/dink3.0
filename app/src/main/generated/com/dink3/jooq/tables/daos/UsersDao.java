/*
 * This file is generated by jOOQ.
 */
package com.dink3.jooq.tables.daos;


import com.dink3.jooq.tables.Users;
import com.dink3.jooq.tables.records.UsersRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersDao extends DAOImpl<UsersRecord, com.dink3.jooq.tables.pojos.Users, String> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, com.dink3.jooq.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    public UsersDao(Configuration configuration) {
        super(Users.USERS, com.dink3.jooq.tables.pojos.Users.class, configuration);
    }

    @Override
    public String getId(com.dink3.jooq.tables.pojos.Users object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchById(String... values) {
        return fetch(Users.USERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.dink3.jooq.tables.pojos.Users fetchOneById(String value) {
        return fetchOne(Users.USERS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.Users> fetchOptionalById(String value) {
        return fetchOptional(Users.USERS.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchByUsername(String... values) {
        return fetch(Users.USERS.USERNAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchByEmail(String... values) {
        return fetch(Users.USERS.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public com.dink3.jooq.tables.pojos.Users fetchOneByEmail(String value) {
        return fetchOne(Users.USERS.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<com.dink3.jooq.tables.pojos.Users> fetchOptionalByEmail(String value) {
        return fetchOptional(Users.USERS.EMAIL, value);
    }

    /**
     * Fetch records that have <code>password_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchRangeOfPasswordHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PASSWORD_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_hash IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchByPasswordHash(String... values) {
        return fetch(Users.USERS.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchByRole(String... values) {
        return fetch(Users.USERS.ROLE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchRangeOfCreatedAt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.dink3.jooq.tables.pojos.Users> fetchByCreatedAt(String... values) {
        return fetch(Users.USERS.CREATED_AT, values);
    }
}
